{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["services_notes","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","put","Note","_ref","note","toggleImportance","label","react_default","a","createElement","className","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","console","log","target","type","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.42a2c673.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'Tätä muistiinpanoa ei ole palvelimelta',\n    date: '2017-12-10T17:30:31.098Z',\n    important: true\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n  ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return(\n        <div className='error'>\n          {message}        \n        </div>\n    )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(note => note.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n\n        setNotes(notes.filter(note => note.id !== id))\n      })\n  }\n\n  const rows = () => notesToShow.map(note => \n    <Note \n      key={note.id} \n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const handleNoteChange = event => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  } \n\n  const addNote = event => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          Show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n\n      <ul>\n        {rows()}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n        />\n\n        <button type=\"submit\">Save</button>\n      </form>   \n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n\n\n"],"sourceRoot":""}